"use client"

import { useState } from "react"
import { Button } from "@/components/ui/button"
import { Input } from "@/components/ui/input"
import { Textarea } from "@/components/ui/textarea"
import { Label } from "@/components/ui/label"
import { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from "@/components/ui/select"
import { Save, Download } from "lucide-react"

interface SetTheSceneFormData {
  story: string
  character: string
  spaceAffectsThoughts: string
  spaceAffectsInteractions: string
  lightOrDark: string
  largeOrSmall: string
  indoorsOrOut: string
  spaceAffectsMovements: string
  perceiveSpaceDifferently: string
  spaceCreatesResolvesConflict: string
  charactersPositioned: string
  themesRepresented: string
  spaceRoleInStory: string
  representativeObjects: string
  spaceLimitations: string
  descriptiveWords: string
  charactersTouch: string
  charactersSee: string
  charactersFeel: string
  howInfluenceScene: string
  spaceLiberties: string
}

export function SetTheSceneForm() {
  const [isExpanded, setIsExpanded] = useState(false)
  const [formData, setFormData] = useState<SetTheSceneFormData>({
    story: "",
    character: "",
    spaceAffectsThoughts: "",
    spaceAffectsInteractions: "",
    lightOrDark: "",
    largeOrSmall: "",
    indoorsOrOut: "",
    spaceAffectsMovements: "",
    perceiveSpaceDifferently: "",
    spaceCreatesResolvesConflict: "",
    charactersPositioned: "",
    themesRepresented: "",
    spaceRoleInStory: "",
    representativeObjects: "",
    spaceLimitations: "",
    descriptiveWords: "",
    charactersTouch: "",
    charactersSee: "",
    charactersFeel: "",
    howInfluenceScene: "",
    spaceLiberties: ""
  })

  const handleInputChange = (field: keyof SetTheSceneFormData, value: string) => {
    setFormData(prev => ({
      ...prev,
      [field]: value
    }))
  }

  const handleSave = () => {
    console.log("Form saved:", formData)
    alert("Form saved successfully")
  }

  const handleExport = () => {
    const content = `SET THE SCENE - FORM COMPLETED

STORY: ${formData.story}
CHARACTER: ${formData.character}

HOW DOES THE SPACE AFFECT THEIR THOUGHTS?
${formData.spaceAffectsThoughts}

HOW DOES THE SPACE AFFECT THEIR INTERACTIONS?
${formData.spaceAffectsInteractions}

IS THE SPACE LIGHT OR DARK?
${formData.lightOrDark}

IS THE SPACE LARGE OR SMALL?
${formData.largeOrSmall}

DOES THE SCENE TAKE PLACE INDOORS OR OUT?
${formData.indoorsOrOut}

HOW DOES THE SPACE AFFECT THE CHARACTERS' MOVEMENTS?
${formData.spaceAffectsMovements}

HOW DO THEY PERCEIVE THE SPACE DIFFERENTLY?
${formData.perceiveSpaceDifferently}

HOW DOES THE SPACE CREATE OR RESOLVE CONFLICT?
${formData.spaceCreatesResolvesConflict}

HOW ARE THE CHARACTERS POSITIONED IN THE SPACE?
${formData.charactersPositioned}

WHAT THEMES ARE REPRESENTED BY THE SPACE?
${formData.themesRepresented}

WHAT ROLE DOES THE SPACE PLAY IN THE STORY?
${formData.spaceRoleInStory}

WHAT OBJECTS ARE REPRESENTATIVE OF THE SPACE?
${formData.representativeObjects}

WHAT LIMITATIONS DOES THE SPACE CAUSE?
${formData.spaceLimitations}

LIST SOME WORDS THAT DESCRIBE THE SPACEâ€¦
${formData.descriptiveWords}

WHAT DO THE CHARACTERS TOUCH?
${formData.charactersTouch}

WHAT DO THE CHARACTERS SEE?
${formData.charactersSee}

WHAT DO THE CHARACTERS FEEL?
${formData.charactersFeel}

HOW DO THESE INFLUENCE THE SCENE?
${formData.howInfluenceScene}

WHAT LIBERTIES DOES THE SPACE PROVIDE?
${formData.spaceLiberties}

Â© E.A. DEVERELL - http://eadeverell.com
Generated by Narratica AI Creative Tools`

    const blob = new Blob([content], { type: 'text/plain' })
    const url = URL.createObjectURL(blob)
    const a = document.createElement('a')
    a.href = url
    a.download = `set-the-scene-${formData.story || 'story'}.txt`
    document.body.appendChild(a)
    a.click()
    document.body.removeChild(a)
    URL.revokeObjectURL(url)
  }

  return (
    <div className="space-y-3">
      <Button
        onClick={() => setIsExpanded(!isExpanded)}
        className="w-full justify-start border-purple-600/30 hover:bg-purple-800/20 bg-transparent"
      >
        <div className="w-6 h-6 rounded bg-white/20 flex items-center justify-center mr-3">
          <span className="text-xs font-bold">ðŸŽ­</span>
        </div>
        Set the Scene
        <span className="ml-auto text-xs text-muted-foreground">
          {isExpanded ? 'â–¼' : 'â–¶'}
        </span>
      </Button>

      {isExpanded && (
        <div className="bg-slate-800/30 border border-purple-800/30 rounded-lg p-4 space-y-4 max-h-[70vh] overflow-y-auto">
          <div className="text-center mb-4">
            <h3 className="text-lg font-semibold text-white mb-2">Set the Scene</h3>
            <p className="text-sm text-muted-foreground">Develop detailed and atmospheric scenes</p>
          </div>
        
          {/* Basic Information */}
          <div className="grid grid-cols-1 gap-3">
            <div>
              <Label htmlFor="story" className="text-white font-semibold text-sm">STORY:</Label>
              <Input
                id="story"
                value={formData.story}
                onChange={(e) => handleInputChange('story', e.target.value)}
                placeholder="Your story title"
                className="mt-1 bg-slate-700 border-purple-800/30 text-white text-sm"
              />
            </div>
            <div>
              <Label htmlFor="character" className="text-white font-semibold text-sm">CHARACTER:</Label>
              <Input
                id="character"
                value={formData.character}
                onChange={(e) => handleInputChange('character', e.target.value)}
                placeholder="Character name"
                className="mt-1 bg-slate-700 border-purple-800/30 text-white text-sm"
              />
            </div>
          </div>

          {/* Main Questions */}
          <div className="space-y-4">
            <div>
              <Label className="text-white font-semibold text-sm">HOW DOES THE SPACE AFFECT THEIR THOUGHTS?</Label>
              <Textarea
                value={formData.spaceAffectsThoughts}
                onChange={(e) => handleInputChange('spaceAffectsThoughts', e.target.value)}
                placeholder="Describe how the space influences the characters' thoughts..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">HOW DOES THE SPACE AFFECT THEIR INTERACTIONS?</Label>
              <Textarea
                value={formData.spaceAffectsInteractions}
                onChange={(e) => handleInputChange('spaceAffectsInteractions', e.target.value)}
                placeholder="Describe how the space affects interactions between characters..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div className="grid grid-cols-1 gap-3">
              <div>
                <Label className="text-white font-semibold text-sm">IS THE SPACE LIGHT OR DARK?</Label>
                <Select value={formData.lightOrDark} onValueChange={(value: string) => handleInputChange('lightOrDark', value)}>
                  <SelectTrigger className="mt-1 bg-slate-700 border-purple-800/30 text-white text-sm">
                    <SelectValue placeholder="Select..." />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="Very Light">Very Light</SelectItem>
                    <SelectItem value="Light">Light</SelectItem>
                    <SelectItem value="Dim">Dim</SelectItem>
                    <SelectItem value="Dark">Dark</SelectItem>
                    <SelectItem value="Very Dark">Very Dark</SelectItem>
                    <SelectItem value="Mixed">Mixed</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div>
                <Label className="text-white font-semibold text-sm">IS THE SPACE LARGE OR SMALL?</Label>
                <Select value={formData.largeOrSmall} onValueChange={(value: string) => handleInputChange('largeOrSmall', value)}>
                  <SelectTrigger className="mt-1 bg-slate-700 border-purple-800/30 text-white text-sm">
                    <SelectValue placeholder="Select..." />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="Very Large">Very Large</SelectItem>
                    <SelectItem value="Large">Large</SelectItem>
                    <SelectItem value="Medium">Medium</SelectItem>
                    <SelectItem value="Small">Small</SelectItem>
                    <SelectItem value="Very Small">Very Small</SelectItem>
                    <SelectItem value="Variable">Variable</SelectItem>
                  </SelectContent>
                </Select>
              </div>

              <div>
                <Label className="text-white font-semibold text-sm">DOES THE SCENE TAKE PLACE INDOORS OR OUT?</Label>
                <Select value={formData.indoorsOrOut} onValueChange={(value: string) => handleInputChange('indoorsOrOut', value)}>
                  <SelectTrigger className="mt-1 bg-slate-700 border-purple-800/30 text-white text-sm">
                    <SelectValue placeholder="Select..." />
                  </SelectTrigger>
                  <SelectContent>
                    <SelectItem value="Indoors">Indoors</SelectItem>
                    <SelectItem value="Outdoors">Outdoors</SelectItem>
                    <SelectItem value="Both">Both</SelectItem>
                    <SelectItem value="Transitional">Transitional</SelectItem>
                  </SelectContent>
                </Select>
              </div>
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">HOW DOES THE SPACE AFFECT THE CHARACTERS&apos; MOVEMENTS?</Label>
              <Textarea
                value={formData.spaceAffectsMovements}
                onChange={(e) => handleInputChange('spaceAffectsMovements', e.target.value)}
                placeholder="Describe how the space restricts or facilitates movement..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">HOW DO THEY PERCEIVE THE SPACE DIFFERENTLY?</Label>
              <Textarea
                value={formData.perceiveSpaceDifferently}
                onChange={(e) => handleInputChange('perceiveSpaceDifferently', e.target.value)}
                placeholder="Describe the different perceptions of the space between characters..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">HOW DOES THE SPACE CREATE OR RESOLVE CONFLICT?</Label>
              <Textarea
                value={formData.spaceCreatesResolvesConflict}
                onChange={(e) => handleInputChange('spaceCreatesResolvesConflict', e.target.value)}
                placeholder="Describe the role of space in conflict..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">HOW ARE THE CHARACTERS POSITIONED IN THE SPACE?</Label>
              <Textarea
                value={formData.charactersPositioned}
                onChange={(e) => handleInputChange('charactersPositioned', e.target.value)}
                placeholder="Describe the position and arrangement of characters..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT THEMES ARE REPRESENTED BY THE SPACE?</Label>
              <Textarea
                value={formData.themesRepresented}
                onChange={(e) => handleInputChange('themesRepresented', e.target.value)}
                placeholder="Describe the themes represented by the space..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT ROLE DOES THE SPACE PLAY IN THE STORY?</Label>
              <Textarea
                value={formData.spaceRoleInStory}
                onChange={(e) => handleInputChange('spaceRoleInStory', e.target.value)}
                placeholder="Describe the narrative role of the space..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT OBJECTS ARE REPRESENTATIVE OF THE SPACE?</Label>
              <Textarea
                value={formData.representativeObjects}
                onChange={(e) => handleInputChange('representativeObjects', e.target.value)}
                placeholder="List objects that represent or characterize the space..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT LIMITATIONS DOES THE SPACE CAUSE?</Label>
              <Textarea
                value={formData.spaceLimitations}
                onChange={(e) => handleInputChange('spaceLimitations', e.target.value)}
                placeholder="Describe the limitations imposed by the space..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">LIST SOME WORDS THAT DESCRIBE THE SPACEâ€¦</Label>
              <Textarea
                value={formData.descriptiveWords}
                onChange={(e) => handleInputChange('descriptiveWords', e.target.value)}
                placeholder="List descriptive words of the space (separated by commas)..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT DO THE CHARACTERS TOUCH?</Label>
              <Textarea
                value={formData.charactersTouch}
                onChange={(e) => handleInputChange('charactersTouch', e.target.value)}
                placeholder="Describe what the characters touch in the space..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT DO THE CHARACTERS SEE?</Label>
              <Textarea
                value={formData.charactersSee}
                onChange={(e) => handleInputChange('charactersSee', e.target.value)}
                placeholder="Describe what the characters see in the space..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT DO THE CHARACTERS FEEL?</Label>
              <Textarea
                value={formData.charactersFeel}
                onChange={(e) => handleInputChange('charactersFeel', e.target.value)}
                placeholder="Describe what the characters feel in the space..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">HOW DO THESE INFLUENCE THE SCENE?</Label>
              <Textarea
                value={formData.howInfluenceScene}
                onChange={(e) => handleInputChange('howInfluenceScene', e.target.value)}
                placeholder="Describe how all these elements influence the scene..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>

            <div>
              <Label className="text-white font-semibold text-sm">WHAT LIBERTIES DOES THE SPACE PROVIDE?</Label>
              <Textarea
                value={formData.spaceLiberties}
                onChange={(e) => handleInputChange('spaceLiberties', e.target.value)}
                placeholder="Describe the liberties that the space provides..."
                className="mt-1 bg-slate-700 border-purple-800/30 text-white min-h-[60px] text-sm"
              />
            </div>
          </div>

          {/* Action Buttons */}
          <div className="flex gap-2 pt-4 border-t border-purple-800/30">
            <Button
              onClick={handleSave}
              className="flex-1 bg-gradient-to-r from-purple-600 to-pink-600 hover:from-purple-700 hover:to-pink-700 text-white text-sm"
            >
              <Save className="w-4 h-4 mr-2" />
              Save
            </Button>
            <Button
              onClick={handleExport}
              variant="outline"
              className="flex-1 border-purple-800/30 text-white hover:bg-purple-800/20 text-sm"
            >
              <Download className="w-4 h-4 mr-2" />
              Export
            </Button>
          </div>
        </div>
      )}
    </div>
  )
}